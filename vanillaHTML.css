/**
  Variables for simple theming.
  Simple dark mode included
**/
:root {
  /* Base Shades - These stay constant regardless of theme */
  --shade-0: rgb(0, 0, 0);
  --shade-5: rgb(5, 5, 5);
  --shade-25: rgb(25, 25, 25);
  --shade-50: rgb(50, 50, 50);
  --shade-75: rgb(75, 75, 75);
  --shade-100: rgb(100, 100, 100);
  --shade-125: rgb(125, 125, 125);
  --shade-150: rgb(150, 150, 150);
  --shade-175: rgb(175, 175, 175);
  --shade-200: rgb(200, 200, 200);
  --shade-225: rgb(225, 225, 225);
  --shade-250: rgb(250, 250, 250);
  --shade-255: rgb(255, 255, 255);

  /* Status Colors */
  --color-danger: red;
  --color-success: green;
  --color-caution: orange;
  --color-accent: hotpink;

  /* Semantic Colors - Light Mode Defaults */
  --background: var(--shade-255);
  --text: var(--shade-0);
  --surface-light: var(--shade-225);
  --surface-medium: var(--shade-175);
  --surface-dark: var(--shade-75);
  --border: var(--shade-50);
  --surface-hover: var(--shade-175);
  --surface-active: var(--shade-25);
  --text-inverse: var(--shade-255);

  /* Utility Variables */
  --border-radius: 4px;
  --section-border: 1px solid rgba(0 0 0 / 0.5);
  --form-border: 1px solid rgba(0 0 0 / 0.3);
}

/*
  Change semantic colors for dark mode
*/
@media (prefers-color-scheme: dark) {
  :root {
    /* Semantic Colors - Dark Mode Values */
    --background: var(--shade-5);
    --text: var(--shade-255);
    --surface-light: var(--shade-50);
    --surface-medium: var(--shade-100);
    --surface-dark: var(--shade-175);
    --border: var(--shade-200);
    --surface-hover: var(--shade-100);
    --surface-active: var(--shade-225);
    --text-inverse: var(--shade-0);

    --section-border: 1px solid rgba(230 230 230 / 0.5);
    --form-border: 1px solid rgba(230 230 230 / 0.3);
  }
}

@layer vanillaHTML;

@layer vanillaHTML {
  *:focus,
  *:focus-visible {
    outline-color: var(--color-accent);
    outline-style: solid;
    outline-width: 3px;
  }

  @font-face {
    font-family: Roboto-Mono;
    src: url(RobotoMono-VariableFont_wght.ttf);
  }
  @font-face {
    font-family: Roboto-Regular;
    src: url(Roboto-Regular.ttf);
  }
  body {
    font-family: "Roboto-Regular";
    background-color: var(--background);
    color: var(--text);
    font-size: 1.05em;
    accent-color: var(--color-accent);
  }

  hgroup {
    box-shadow: -5px 0 0 -1px var(--text);
    padding-left: 1rem;
  }

  a:not([class]) {
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
    border-bottom: 1px dashed;
    position: relative;
    padding: 0 0.25rem;
  }

  a:not([class]):after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0;
    background: white;
    mix-blend-mode: difference;
    transition: height 0.15s;
  }

  a:not([class]):focus:after,
  a:not([class]):hover:after {
    height: 100%;
  }

  a:not([class]):active:after {
    background: var(--surface-dark);
  }

  hgroup p {
    font-weight: 500;
    font-style: italic;
  }

  main {
    max-width: 1200px;
    margin: auto;
    padding: 2rem;
  }

  main section {
    border: var(--section-border);
    border-radius: var(--border-radius);
    padding: 1rem;
    margin-block-end: 1rem;
    margin-block-start: 1rem;
  }

  :has(h1, h2, h3, h4, p, figure, blockquote, dl, dd) {
    h1,
    h2,
    h3,
    h4,
    p,
    figure,
    blockquote,
    dl,
    dd {
      &:nth-child(1) {
        margin-block-start: 0;
      }
    }
  }

  hr {
    margin: 1rem 0;
  }

  code {
    background: var(--border);
    padding: 0.15rem;
    border-radius: var(--border-radius);
    color: var(--text-inverse);
    border: 1px solid var(--surface-light);
    font-family: Roboto-Mono;
    font-size: 0.95rem;
  }

  div:has(table) {
    max-width: 100%;
    overflow: auto;
  }

  table {
    margin-block-start: 1rem;
    border-radius: var(--border-radius);
    border: var(--form-border);
    border-spacing: 0;
    overflow: hidden;
  }

  td,
  th {
    padding: 1rem;
  }

  tbody td,
  th {
    border-bottom: var(--form-border);
  }

  tr:nth-child(even),
  th {
    background-color: var(--surface-light);
  }

  td:not(:nth-last-child(1)),
  th:not(:nth-last-child(1)) {
    border-right: var(--form-border);
  }

  tfoot tr td:nth-child(1) {
    border-top: var(--section-border);
  }

  aside {
    color: var(--text);
    background-color: var(--surface-medium);
    display: inline-block;
    padding: 1rem;
    border-left: 5px solid var(--surface-dark);
    margin-block-start: 1rem;
    border-radius: var(--border-radius);
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    border: var(--form-border);
    padding: 1rem;
    border-radius: var(--border-radius);
    margin-block-start: 1rem;
  }

  fieldset {
    border: var(--form-border);
    border-radius: var(--border-radius);
  }

  input,
  input + label {
    cursor: pointer;
  }

  input[type="email"],
  input[type="password"],
  input[type="text"],
  input[type="search"] {
    border-radius: var(--border-radius);
    padding: 0.5rem;
    border: var(--section-border);
    width: fit-content;
    cursor: text;
  }

  form:has(input[type="email"])
    input[type="email"]:not(:placeholder-shown):valid,
  form:has(input[type="password"])
    input[type="password"]:not(:placeholder-shown):valid {
    outline-color: var(--color-success);
  }

  form:has(input[type="email"])
    input[type="email"]:not(:placeholder-shown):invalid,
  form:has(input[type="password"])
    input[type="password"]:not(:placeholder-shown):invalid {
    outline-color: var(--color-caution);
  }

  form:has(input[type="email"]) input[type="email"]:focus,
  form:has(input[type="password"]) input[type="password"]:focus {
    outline-color: var(--color-danger);
  }

  input[type="range"] {
    display: block;
    cursor: ew-resize;
  }

  input[type="color"] {
    inline-size: 40px;
    block-size: 40px;
    background-color: var(--background);
  }

  button:not([popovertarget]) {
    padding: 0.5rem 1rem;
    border: var(--section-border);
    background-color: var(--text);
    color: var(--background);
    border-radius: var(--border-radius);
    width: fit-content;
    cursor: pointer;
  }

  button:not([popovertarget]):hover {
    background-color: var(--surface-dark);
  }

  button:not([popovertarget]):active {
    background: var(--surface-active);
    scale: 0.95;
  }

  details {
    border: var(--form-border);
    border-radius: var(--border-radius);
    margin-block-start: 1rem;
  }

  details div {
    padding: 1rem;
    border-top: var(--form-border);
  }

  summary {
    color: var(--text);
    padding: 1rem;
    cursor: pointer;
    font-weight: 500;
  }

  details:not([open]) summary:focus,
  details:not([open]) summary:focus-visible,
  details:not([open]) summary:hover {
    background-color: var(--surface-hover);
    color: var(--text);
  }

  details[open] summary {
    background-color: var(--surface-dark);
    color: var(--text-inverse);
  }

  details[open] summary:hover {
    background-color: var(--surface-hover);
    color: var(--text);
  }

  abbr {
    font-style: italic;
    border-bottom: 1px dotted;
  }

  textarea {
    resize: none;
    padding: 0.75rem;
  }

  div:has(> blockquote) {
    background-color: var(--text);
    color: var(--background);
    padding: 0.75rem;
  }

  div:has(> blockquote) > p {
    text-align: right;
    margin-inline-start: 20px;
    margin-inline-end: 20px;
  }

  blockquote {
    margin-inline-start: 20px;
  }

  blockquote p::before {
    content: "\201C";
  }

  blockquote p::after {
    content: "\201D";
  }
}

dt {
  font-size: 1.125rem;
  font-weight: 600;
  border-bottom: 1px solid;
  width: fit-content;
}

dd {
  margin-block-start: 0.5rem;
  margin-block-end: 0.75rem;
}

dd:before {
  content: "\25B6";
  font-size: 0.75rem;
}
